{"data":{"site":{"siteMetadata":{"title":"Web Development","author":"M. Ezzat"}},"markdownRemark":{"id":"8bf7a07f-10e2-5947-b812-57a018150a18","excerpt":"When you create AWS ElasticSearch Service behind VPC, you will never find a direct way to access ElasticSearch from outside the local VPC , and the only way to…","html":"<p>When you create AWS ElasticSearch Service behind VPC, you will never find a direct way to access ElasticSearch from outside the local VPC , and the only way to be able to do it, is by using EC2 instance inside this VPC and use this instance as a proxy server that will forward the requsers from your local machine to ElasticSearch service and responses from ElasticSearch to your machine.</p>\n<p>I found this approach very simple and fast when I want to access ElasticSearch for doing some tests or for accessing Kibana console.\nThe easiest way from my point of view as a Node.js developer is to use http-proxy , it is very efficient way to create proxy servers.</p>\n<h3>So , let’s begin with very basic HTTP server on port 8080.</h3>\n<ol>\n<li>\n<p>Create aws EC2 instance inside the VPC.</p>\n</li>\n<li>\n<p>Access it using SSH and install nodejs version >= 8 and git</p>\n</li>\n<li>\n<p>Forward ports  80 to 8080 and 443 to 8443 </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8443\n<span class=\"token function\">sudo</span> iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080</code></pre></div>\n</li>\n<li>\n<p>Clone this repo </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/enGMzizo/aws-vpc-proxy</code></pre></div>\n</li>\n<li>\n<p>Run :</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> </code></pre></div>\n<p>and to start it use this command </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ELASTIC_URL<span class=\"token operator\">=</span>https://XXXXXXXX.eu-west-1.es.amazonaws.com  node index.js</code></pre></div>\n<p>replace <code class=\"language-text\">https://XXXXXXXX.eu-west-1.es.amazonaws.com</code> with your actual ElasticSearch Service URL or IP Address.</p>\n<p>and then navigate to your instance ip address on your browser <code class=\"language-text\">http://ipaddress/_plugin/kibana</code>\nYou should be able to see kibana.</p>\n</li>\n</ol>\n<h3>Adding domain and support HTTPS</h3>\n<ol>\n<li>\n<p>Generate https credentials for your domain name using <a href=\"https://letsencrypt.org/docs\">https://letsencrypt.org/docs</a>\nand you should have two files private key and certs , You will use these files with your node https server.</p>\n</li>\n<li>\n<p>Add your domain to your server using aws route 53.</p>\n</li>\n<li>\n<p>Upload your certs files to your server.</p>\n</li>\n<li>\n<p>Uncomment all the code in index.js and add your uploaded private key and server certs </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> credentials <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  key<span class=\"token punctuation\">:</span> <span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'PATH_TO_KEY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  cert<span class=\"token punctuation\">:</span> <span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'PATH_TO_CERTS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>and re-run </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ELASTIC_URL<span class=\"token operator\">=</span>https://XXXXXXXX.eu-west-1.es.amazonaws.com  node index.js</code></pre></div>\n<p>The node js server should be listning to the port <code class=\"language-text\">8443</code> and it should accept secured connections.</p>\n</li>\n<li>\n<p>Now you can access your kibana from your domain name\n<a href=\"https://domain.com/_plugin/kibana\">https://domain.com/_plugin/kibana</a></p>\n</li>\n</ol>","frontmatter":{"title":"Access AWS ElasticSearch Kibana behind VPC using Node.js","date":"September 01, 2018"}}},"pageContext":{"slug":"/hello-world/","previous":null,"next":null}}